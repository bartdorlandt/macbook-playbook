---
- name: Install Python interpreters
  ansible.builtin.command: "pyenv install {{ item }}"
  args:
    creates: "{{ ansible_env.HOME }}/.pyenv/versions/{{ item }}/bin/python"
  loop: "{{ pyenv_python_versions }}"

- name: Get current global version
  ansible.builtin.command: "pyenv global"
  register: pyenv_global_version
  changed_when: false

- name: Set pyenv_global_active fact
  ansible.builtin.set_fact:
    pyenv_global_active: "{{ pyenv_global_version.stdout_lines | join(' ') | trim() }}"

- name: Set pyenv global version to {{ pyenv_global }}
  ansible.builtin.shell: "pyenv global {{ pyenv_global }} && pyenv rehash"
  when: "pyenv_global is defined and pyenv_global_active != pyenv_global"

- name: Install global Pip packages.
  ansible.builtin.pip:
    name: "{{ item.name | default(item) }}"
    state: "{{ item.state | default('present') }}"
    version: "{{ item.version | default(omit) }}"
    executable: "{{ item.executable | default(pip_executable) }}"
  loop: "{{ pip_packages }}"

- name: Create pypirc file
  ansible.builtin.template:
    src: pypirc.j2
    dest: "{{ ansible_env.HOME }}/.pypirc"
    mode: "0600"
  when: pypi_username is defined and pypi_password is defined
  tags: pypi
