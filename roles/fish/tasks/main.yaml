---
- name: Get stats of fish executable
  ansible.builtin.stat:
    path: "{{ fish_executable }}"
  register: fish_exec

- name: "Ensure /etc/shells contains 'fish executable'"
  ansible.builtin.lineinfile:
    name: /etc/shells
    line: "{{ fish_executable }}"
    state: present
  when: fish_exec.stat.exists
  become: true

- name: Create the fish directory
  ansible.builtin.file:
    path: "{{ fish_home }}"
    state: directory
    mode: "0755"
  when: configure_dotfiles and fish_exec.stat.exists

- name: Symlink fish config direcotries
  ansible.builtin.file:
    src: "{{ fish_dotfiles }}/fish_user/{{ item }}"
    dest: "{{ fish_home }}{{ item }}"
    state: link
    force: true
  with_items: "{{ fish_links }}"
  when: configure_dotfiles and fish_exec.stat.exists

- name: Ensure default shell is fish for "{{ ansible_env.USER }}"
  ansible.builtin.user:
    name: "{{ ansible_env.USER }}"
    shell: "{{ fish_executable }}"
  when: fish_exec.stat.exists

# OMF
- name: Check if oh-my-fish is installed
  ansible.builtin.stat:
    path: "{{ fish_omf_path }}"
  register: omf

- name: Clone oh-my-fish repo
  ansible.builtin.git:
    repo: 'https://github.com/oh-my-fish/oh-my-fish'
    dest: "{{ fish_omf_path }}"
  when: not omf.stat.exists

- name: Install oh-my-fish
  ansible.builtin.shell:
    cmd: "{{ fish_omf_path }}/bin/install -y --offline --noninteractive"
    executable: "{{ fish_executable }}"
    creates: "{{ fish_home }}/conf.d/omf.fish"
  when: not omf.stat.exists

- name: Install OMF plugins
  ansible.builtin.shell:
    cmd: "omf install {{ item }}"
    executable: "{{ fish_executable }}"
    creates: "{{ fish_omf_path }}/pkg/{{ item }}"
  with_items: "{{ fish_omf_plugins }}"
  when: not omf.stat.exists
